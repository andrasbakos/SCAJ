**** PROPERTIES SKAFFOLDER ****
{
    "forEachObj": "table",
    "overwrite": true,
    "_partials": []
}
**** END PROPERTIES SKAFFOLDER ****
package com.{{#lowercase project.name}}{{/lowercase}}.db.{{#lowercase db.name}}{{/lowercase}}.entity.base;

/**
 * 
 * 
  _____                      _              _ _ _     _   _     _        __ _ _      
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |     
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___ 
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|
 
                                                                                   
 * DO NOT EDIT THIS FILE!! 
 *
 *  FOR CUSTOMIZE {{capitalize entity.name}}Base PLEASE EDIT ../{{capitalize entity.name}}.java
 * 
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER CODE GENERATION --
 * 
 */
 

/**
 * This is the model of {{capitalize entity.name}} object
 * 
 */
 
import org.bson.types.ObjectId;
import org.mongodb.morphia.annotations.Entity;
import java.util.Date;
import java.math.BigDecimal;
import java.util.List;
import java.util.ArrayList;

import org.mongodb.morphia.annotations.Id;

import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
import com.{{#lowercase ./project.name}}{{/lowercase}}.utils.ObjectIdListSerializer;


//IMPORT RELATIONS
{{#each entity._relations}}
import com.{{#lowercase ../project.name}}{{/lowercase}}.db.{{#lowercase ../db.name}}{{/lowercase}}.entity.{{#capitalize _ent2.name}}{{/capitalize}};
{{/each}}

@Entity("{{capitalize entity.name}}")
public class {{capitalize entity.name}}Base {
	
	@Id
	@JsonSerialize(using = ToStringSerializer.class)
	private ObjectId _id;
	
	// Attributes
	{{#equal entity.name 'User'}}
    private String token;
    private ArrayList<String> roles;
    {{#each entity._attrs}}
    {{#notEqual name 'roles'}}
    {{#notEqual name 'token'}}
    private {{type}} {{name}};
    {{/notEqual}}
    {{/notEqual}}
    {{/each}}
	{{/equal}}
	{{#notEqual entity.name 'User'}}
    {{#each entity._attrs}}
    private {{toJavaType type}} {{name}};
    {{/each}}
	{{/notEqual}}
	
	{{#each entity._relations}}{{#equal type "1:m"}}{{#equal _ent1.name ../entity.name}}
	// Relations {{name}}
	@JsonSerialize(using = ToStringSerializer.class)
	private ObjectId {{name}};
	{{/equal}}{{/equal}}{{/each}}
	
	{{#each entity._relations}}{{#equal type "m:m"}}{{#equal _ent1.name ../entity.name}}
	// Relations m:m {{name}}
	@JsonSerialize(using = ObjectIdListSerializer.class)
	private List<ObjectId> {{name}};
	{{/equal}}{{/equal}}{{/each}}
	

    // GETTER AND SETTER
    
	public ObjectId get_id() {
		return _id;
	}

	public void set_id(ObjectId id) {
		this._id = id;
	}


	{{#each entity._attrs}}{{#notEqual name 'roles'}}
	public {{toJavaType type}} get{{#capitalize name}}{{/capitalize}}() {
		return {{name}};
	}


	public void set{{#capitalize name}}{{/capitalize}}({{toJavaType type}} {{name}}) {
		this.{{name}} = {{name}};
	}
    {{/notEqual}}{{#equal name 'roles'}}
	public ArrayList<String> get{{#capitalize name}}{{/capitalize}}() {
		return {{name}};
	}


	public void set{{#capitalize name}}{{/capitalize}}(ArrayList<String> {{name}}) {
		this.{{name}} = {{name}};
	}
	{{/equal}}{{/each}}

	{{#equal entity.name 'User'}}
	public String getToken() {
		return token;
	}
	public void setToken(String token) {
		this.token = token;
	}
	
	public boolean hasRole(String role) {
		return roles.indexOf(role) != -1;
	}
	{{/equal}}
	
    {{#each entity._relations}}{{#equal type "1:m"}}{{#equal _ent1.name ../entity.name}}
    // Relations 1:m {{name}}
	public ObjectId get{{#capitalize name}}{{/capitalize}}() {
		return {{name}};
	}

	public void set{{#capitalize name}}{{/capitalize}}(ObjectId {{name}}) {
		this.{{name}} = {{name}};
	}
    {{/equal}}{{/equal}}{{/each}}
    
    
    {{#each entity._relations}}{{#equal type "m:m"}}{{#equal _ent1.name ../entity.name}}
    // Relations m:m {{name}}
	public List<ObjectId> get{{#capitalize name}}{{/capitalize}}() {
		return {{name}};
	}

	public void set{{#capitalize name}}{{/capitalize}}(List<ObjectId> {{name}}) {
		this.{{name}} = {{name}};
	}
	
    {{/equal}}{{/equal}}{{/each}}
}
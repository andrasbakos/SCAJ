/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN FoodEntryActionsGenerated.js PLEASE EDIT ../FoodEntryActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import FoodEntryApi from "../../../api/FoodEntryApi";

let actionsFunction = {

  //CRUD METHODS

  // Create foodentry
  createFoodEntry: function(foodentry) {
    return function(dispatch) {
      return FoodEntryApi
        .createFoodEntry(foodentry)
        .then(foodentry => {
          dispatch(actionsFunction.createFoodEntrySuccess(foodentry));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createFoodEntrySuccess: function(foodentry) {
    return { type: types.CREATE_FOODENTRY_SUCCESS, payload: foodentry };
  },


  // Delete foodentry
  deleteFoodEntry: function(id) {
    return function(dispatch) {
      return FoodEntryApi
        .deleteFoodEntry(id)
        .then(foodentry => {
          dispatch(actionsFunction.deleteFoodEntrySuccess(foodentry));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteFoodEntrySuccess: function(foodentry) {
    return { type: types.DELETE_FOODENTRY_SUCCESS, payload: foodentry };
  },


  // Get foodentry
  loadFoodEntry: function(id) {
    return function(dispatch) {
      return FoodEntryApi
        .getOneFoodEntry(id)
        .then(foodentry => {
          dispatch(actionsFunction.loadFoodEntrySuccess(foodentry));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadFoodEntrySuccess: function(foodentry) {
    return { type: types.GET_FOODENTRY_SUCCESS, payload: foodentry };
  },

  // Load  list
  loadFoodEntryList: function() {
    return function(dispatch) {
      return FoodEntryApi
        .getFoodEntryList()
        .then(list => {
          dispatch(actionsFunction.loadFoodEntryListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadFoodEntryListSuccess: function(list) {
    return { type: types.LIST_FOODENTRY_SUCCESS, payload: list };
  },

	
  // Save foodentry
  saveFoodEntry: function(foodentry) {
    return function(dispatch) {
      return FoodEntryApi
        .saveFoodEntry(foodentry)
        .then(foodentry => {
          dispatch(actionsFunction.saveFoodEntrySuccess(foodentry));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveFoodEntrySuccess: function(foodentry) {
    return { type: types.UPDATE_FOODENTRY_SUCCESS, payload: foodentry };
  },


};

export default actionsFunction;
